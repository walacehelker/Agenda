// <auto-generated />
using System;
using Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Context.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dados.Cadastro.Atendimento", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataAtendimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_atendimento");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("descricao");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit")
                        .HasColumnName("excluido");

                    b.Property<string>("PessoaId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id_pessoa");

                    b.Property<string>("TipoAtendimentoId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id_tipo_atendimento");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.HasIndex("TipoAtendimentoId");

                    b.ToTable("atendimentos", (string)null);
                });

            modelBuilder.Entity("Dados.Cadastro.Pessoa", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cnpj");

                    b.Property<string>("Cpf")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cpf");

                    b.Property<string>("Crm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("crm");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_nascimento");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit")
                        .HasColumnName("excluido");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nome_completo");

                    b.Property<string>("NomeMae")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rg")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("rg");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("tipo_usuario");

                    b.HasKey("Id");

                    b.ToTable("cad_pessoas", (string)null);
                });

            modelBuilder.Entity("Dados.Cadastro.TipoAtendimento", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("descricao");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit")
                        .HasColumnName("excluido");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("tipos_atendimentos", (string)null);
                });

            modelBuilder.Entity("Dados.Cadastro.UsuarioLogin", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit")
                        .HasColumnName("excluido");

                    b.Property<string>("PessoaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("senha");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("usuario_login", (string)null);
                });

            modelBuilder.Entity("Dados.Cadastro.Atendimento", b =>
                {
                    b.HasOne("Dados.Cadastro.Pessoa", "Pessoa")
                        .WithMany("AtendimentoList")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dados.Cadastro.TipoAtendimento", "TipoAtendimento")
                        .WithMany("AtendimentoList")
                        .HasForeignKey("TipoAtendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("TipoAtendimento");
                });

            modelBuilder.Entity("Dados.Cadastro.UsuarioLogin", b =>
                {
                    b.HasOne("Dados.Cadastro.Pessoa", "Pessoa")
                        .WithOne("UsuarioLogin")
                        .HasForeignKey("Dados.Cadastro.UsuarioLogin", "PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Dados.Cadastro.Pessoa", b =>
                {
                    b.Navigation("AtendimentoList");

                    b.Navigation("UsuarioLogin")
                        .IsRequired();
                });

            modelBuilder.Entity("Dados.Cadastro.TipoAtendimento", b =>
                {
                    b.Navigation("AtendimentoList");
                });
#pragma warning restore 612, 618
        }
    }
}
